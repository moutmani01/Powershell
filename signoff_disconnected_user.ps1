@echo off

for /f "skip=1 tokens=2" %%A in ('query user ^| find "Disc"') do (
    logoff %%A
)



# PowerShell script that will help you delete sessions that have been disconnected for more than 3 days, generated by ChatGPT :
# Get the current date
$currentDate = Get-Date

# Get disconnected sessions older than 3 days
$disconnectedSessions = Get-RDUserSession | Where-Object { $_.State -eq 'Disconnected' -and ($currentDate - $_.DisconnectTime).Days -gt 3 }

# Delete the sessions
foreach ($session in $disconnectedSessions) {
    Invoke-RDUserLogoff -UnifiedSessionID $session.UnifiedSessionID -Force
}



I apologize for the confusion. If the `Get-RDUserSession` cmdlet doesn't provide the disconnected status, you might need to adjust your approach. Here's an alternative script that uses `quser` command to retrieve disconnected sessions and then calculates the duration to perform the logoff:

```powershell
# Get disconnected sessions using quser
$disconnectedSessions = quser | ForEach-Object {
    $sessionInfo = $_ -split '\s+'
    $username = $sessionInfo[0]
    $sessionState = $sessionInfo[2]
    $sessionIdleTime = [TimeSpan]::Parse($sessionInfo[3])

    if ($sessionState -eq "Disc" -and $sessionIdleTime.TotalDays -gt 3) {
        $username
    }
}

# Log off the disconnected sessions
foreach ($username in $disconnectedSessions) {
    logoff $username /server:your_server_name_or_ip
}
```

Replace `"your_server_name_or_ip"` with the actual name or IP address of your server. This script uses the `quser` command to retrieve session information, and then logs off sessions that are both in a "Disc" (Disconnected) state and have been idle for more than 3 days.

Please ensure you run this script with appropriate permissions and test it in a controlled environment before using it in a production setting.




Certainly, here's a batch script that achieves the same goal using the `query user` command and the `logoff` command:

```batch
@echo off
setlocal

for /f "skip=1 tokens=1,3,5" %%A in ('query user') do (
    set "username=%%A"
    set "sessionState=%%B"
    set "sessionIdleTime=%%C"
    if "%%B"=="Disc" (
        for /f "tokens=1-3 delims=:." %%D in ("%%C") do (
            set /a "idleHours=%%D"
            set /a "idleMinutes=%%E"
            set /a "idleSeconds=%%F"
            set /a "totalIdleTime=(idleHours*60*60) + (idleMinutes*60) + idleSeconds"
            if !totalIdleTime! gtr 259200 (
                logoff %%A
            )
        )
    )
)

endlocal
```

This batch script iterates through the output of the `query user` command, extracts the necessary information about the session state and idle time, and then calculates the total idle time in seconds. If the session is in a "Disc" (Disconnected) state and has been idle for more than 3 days (259,200 seconds), it logs off the user session using the `logoff` command.

Please remember to test this script in a controlled environment before using it on your production system.